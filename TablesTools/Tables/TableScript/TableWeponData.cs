//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg
{

public sealed partial class TableWeponData :  Bright.Config.BeanBase 
{
    public TableWeponData(JSONNode _json) 
    {
        { if(!_json["id"].IsNumber) { throw new SerializationException(); }  Id = _json["id"]; }
        { if(!_json["name"].IsString) { throw new SerializationException(); }  Name = _json["name"]; }
        { if(!_json["damage"].IsNumber) { throw new SerializationException(); }  Damage = _json["damage"]; }
        { if(!_json["prefab"].IsString) { throw new SerializationException(); }  Prefab = _json["prefab"]; }
        { if(!_json["controller"].IsNumber) { throw new SerializationException(); }  Controller = _json["controller"]; }
        { if(!_json["actionEvent"].IsString) { throw new SerializationException(); }  ActionEvent = _json["actionEvent"]; }
        { if(!_json["hand"].IsNumber) { throw new SerializationException(); }  Hand = _json["hand"]; }
        PostInit();
    }

    public TableWeponData(int id, string name, int damage, string prefab, int controller, string actionEvent, int hand ) 
    {
        this.Id = id;
        this.Name = name;
        this.Damage = damage;
        this.Prefab = prefab;
        this.Controller = controller;
        this.ActionEvent = actionEvent;
        this.Hand = hand;
        PostInit();
    }

    public static TableWeponData DeserializeTableWeponData(JSONNode _json)
    {
        return new TableWeponData(_json);
    }

    /// <summary>
    /// 这是id
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// 名称
    /// </summary>
    public string Name { get; private set; }
    /// <summary>
    /// 伤害值
    /// </summary>
    public int Damage { get; private set; }
    /// <summary>
    /// 预制物
    /// </summary>
    public string Prefab { get; private set; }
    /// <summary>
    /// 控制器预设
    /// </summary>
    public int Controller { get; private set; }
    /// <summary>
    /// 武器触发事件
    /// </summary>
    public string ActionEvent { get; private set; }
    /// <summary>
    /// 左右手
    /// </summary>
    public int Hand { get; private set; }

    public const int __ID__ = -414401539;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Name:" + Name + ","
        + "Damage:" + Damage + ","
        + "Prefab:" + Prefab + ","
        + "Controller:" + Controller + ","
        + "ActionEvent:" + ActionEvent + ","
        + "Hand:" + Hand + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
