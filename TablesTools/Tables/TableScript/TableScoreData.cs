//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg
{

public sealed partial class TableScoreData :  Bright.Config.BeanBase 
{
    public TableScoreData(JSONNode _json) 
    {
        { if(!_json["id"].IsNumber) { throw new SerializationException(); }  Id = _json["id"]; }
        { if(!_json["name"].IsString) { throw new SerializationException(); }  Name = _json["name"]; }
        { if(!_json["score"].IsNumber) { throw new SerializationException(); }  Score = _json["score"]; }
        { if(!_json["times"].IsNumber) { throw new SerializationException(); }  Times = _json["times"]; }
        { var __json0 = _json["npcState"]; if(!__json0.IsArray) { throw new SerializationException(); } NpcState = new System.Collections.Generic.List<int>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { int __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0; }  NpcState.Add(__v0); }   }
        PostInit();
    }

    public TableScoreData(int id, string name, int score, int times, System.Collections.Generic.List<int> npcState ) 
    {
        this.Id = id;
        this.Name = name;
        this.Score = score;
        this.Times = times;
        this.NpcState = npcState;
        PostInit();
    }

    public static TableScoreData DeserializeTableScoreData(JSONNode _json)
    {
        return new TableScoreData(_json);
    }

    /// <summary>
    /// 这是id
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// 名字
    /// </summary>
    public string Name { get; private set; }
    /// <summary>
    /// 得分
    /// </summary>
    public int Score { get; private set; }
    /// <summary>
    /// 可完成次数
    /// </summary>
    public int Times { get; private set; }
    /// <summary>
    /// npc状态可出发
    /// </summary>
    public System.Collections.Generic.List<int> NpcState { get; private set; }

    public const int __ID__ = -1775099570;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Name:" + Name + ","
        + "Score:" + Score + ","
        + "Times:" + Times + ","
        + "NpcState:" + Bright.Common.StringUtil.CollectionToString(NpcState) + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
