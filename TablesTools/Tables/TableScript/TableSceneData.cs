//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg
{

public sealed partial class TableSceneData :  Bright.Config.BeanBase 
{
    public TableSceneData(JSONNode _json) 
    {
        { if(!_json["id"].IsNumber) { throw new SerializationException(); }  Id = _json["id"]; }
        { if(!_json["Scene"].IsString) { throw new SerializationException(); }  Scene = _json["Scene"]; }
        { if(!_json["sceneName"].IsString) { throw new SerializationException(); }  SceneName = _json["sceneName"]; }
        { if(!_json["linkPlayerNum"].IsNumber) { throw new SerializationException(); }  LinkPlayerNum = _json["linkPlayerNum"]; }
        { if(!_json["defaultSelect"].IsNumber) { throw new SerializationException(); }  DefaultSelect = _json["defaultSelect"]; }
        { if(!_json["randomNpc"].IsNumber) { throw new SerializationException(); }  RandomNpc = _json["randomNpc"]; }
        { if(!_json["npcNum"].IsNumber) { throw new SerializationException(); }  NpcNum = _json["npcNum"]; }
        { var __json0 = _json["npcList"]; if(!__json0.IsArray) { throw new SerializationException(); } NpcList = new System.Collections.Generic.List<int>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { int __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0; }  NpcList.Add(__v0); }   }
        { if(!_json["randomRoom"].IsNumber) { throw new SerializationException(); }  RandomRoom = _json["randomRoom"]; }
        { if(!_json["randomNum"].IsNumber) { throw new SerializationException(); }  RandomNum = _json["randomNum"]; }
        PostInit();
    }

    public TableSceneData(int id, string Scene, string sceneName, int linkPlayerNum, int defaultSelect, int randomNpc, int npcNum, System.Collections.Generic.List<int> npcList, int randomRoom, int randomNum ) 
    {
        this.Id = id;
        this.Scene = Scene;
        this.SceneName = sceneName;
        this.LinkPlayerNum = linkPlayerNum;
        this.DefaultSelect = defaultSelect;
        this.RandomNpc = randomNpc;
        this.NpcNum = npcNum;
        this.NpcList = npcList;
        this.RandomRoom = randomRoom;
        this.RandomNum = randomNum;
        PostInit();
    }

    public static TableSceneData DeserializeTableSceneData(JSONNode _json)
    {
        return new TableSceneData(_json);
    }

    /// <summary>
    /// 这是id
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// 名称
    /// </summary>
    public string Scene { get; private set; }
    /// <summary>
    /// 场景名称
    /// </summary>
    public string SceneName { get; private set; }
    public int LinkPlayerNum { get; private set; }
    /// <summary>
    /// int
    /// </summary>
    public int DefaultSelect { get; private set; }
    /// <summary>
    /// 是否随机npc
    /// </summary>
    public int RandomNpc { get; private set; }
    /// <summary>
    /// npc数量
    /// </summary>
    public int NpcNum { get; private set; }
    /// <summary>
    /// npc列表
    /// </summary>
    public System.Collections.Generic.List<int> NpcList { get; private set; }
    /// <summary>
    /// 随机房间
    /// </summary>
    public int RandomRoom { get; private set; }
    /// <summary>
    /// 随机房间数量
    /// </summary>
    public int RandomNum { get; private set; }

    public const int __ID__ = 2120248904;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Scene:" + Scene + ","
        + "SceneName:" + SceneName + ","
        + "LinkPlayerNum:" + LinkPlayerNum + ","
        + "DefaultSelect:" + DefaultSelect + ","
        + "RandomNpc:" + RandomNpc + ","
        + "NpcNum:" + NpcNum + ","
        + "NpcList:" + Bright.Common.StringUtil.CollectionToString(NpcList) + ","
        + "RandomRoom:" + RandomRoom + ","
        + "RandomNum:" + RandomNum + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
